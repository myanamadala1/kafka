apiVersion: v1
kind: List
items:
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: kibana-network-policy
  spec:
    podSelector:
      matchLabels:
        app: kibana
    ingress:
    - {}
- apiVersion: policy/v1beta1
  kind: PodDisruptionBudget
  metadata:
    name: kibana
    labels:
      app: kibana
  spec:
    selector:
      matchLabels:
        app: kibana
    maxUnavailable: 1
- apiVersion: v1
  kind: Service
  metadata:
    name: kibana-external
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 5601
    selector:
      app: kibana
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: kibana
    name: kibana
  spec:
    ports:
    - name: client
      port: 5601
      protocol: TCP
      targetPort: client
    selector:
      app: kibana
    sessionAffinity: None
    type: ClusterIP
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    name: kibana-ingress
    annotations:
      traefik.frontend.rule.type: PathPrefixStrip
      ingress.kubernetes.io/content-type-nosniff: "true"
      nginx.ingress.kubernetes.io/affinity: cookie
  spec:
    rules:
    - http:
        paths:
        - path: /app/kibana
          backend:
            serviceName: kibana-external
            servicePort: 80
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: kibana
    name: kibana-headless
  spec:
    clusterIP: None
    ports:
    - name: client
      port: 5601
      protocol: TCP
      targetPort: client
    selector:
      app: kibana
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    labels:
      app: kibana
    name: kibana
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    selector:
      matchLabels:
        app: kibana
    serviceName: kibana-headless
    template:
      metadata:
        labels:
          app: kibana
      spec:
        containers:
        - name: kibana
          image: reg-dhc-americas.app.corpintra.net/myanama/kibana-oss:6.6.1
          imagePullPolicy: IfNotPresent
          env:
          - name: ELASTICSEARCH_HOSTS
            value: "http://elasticsearch-headless:9200"
          - name: SERVER_NAME
            value: "ng-garage-nafta-qa.app.corpintra.net"
          ports:
          - containerPort: 5601
            name: client
            protocol: TCP
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/kibana
            name: data
        dnsPolicy: ClusterFirst
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        terminationGracePeriodSeconds: 1800
    updateStrategy:
      type: OnDelete
    volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

