apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: &name postgresql
  labels:
    app: *name
    cluster-name: &cluster_name postgresql-cluster
spec:
  replicas: 2
  serviceName: *name
  template:
    metadata:
      labels:
        app: *name
        cluster-name: *cluster_name
        zone: db
    spec:
      serviceAccountName: postgresmaster
      containers:
      - name: database
        image: reg-dhc-americas.app.corpintra.net/myanama/postgres:10
        imagePullPolicy: Always
        ports:
        - containerPort: 8008
          protocol: TCP
          name: ctl
        - containerPort: 64000
          protocol: TCP
          name: postgresql
        env:
        - name: PGSSL
          value: "YES"
        - name: PGDATABASE
          value: "testdb"
        - name: PGINIT
          value: "/srv/postgresql/home/postgres/dbscripts/custom/init_db.sql"
        - name: PGDBADM
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: postgres.dbadm.username
        - name: PGDBADMPW
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: postgres.dbadm.password

### now mandatory
        - name: PGBACKUPUSER
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: postgres.backupuser.username
        - name: PGBACKUPUSERPW
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: postgres.backupuser.password

#### new
        - name: PATRONIUSERPW
          valueFrom:
            secretKeyRef:
              name: postgres-secrets
              key: postgres.patroniuser.password

### new but inherited
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_LABELS
          value: '{app: postgresql, cluster-name: postgresql-cluster}'
        - name: CLUSTER_SCOPE
          value: *cluster_name
        volumeMounts:
        - name: *name
          mountPath: "/srv/postgresql/volume"
        - name: initsql
          mountPath: /srv/postgresql/home/postgres/dbscripts/custom
      securityContext:
        fsGroup: 987
      terminationGracePeriodSeconds: 0
      volumes:
      - name: initsql
        configMap:
          name: initsql
  volumeClaimTemplates:
  - metadata:
      name: *name
    spec:
      storageClassName: cinder
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
