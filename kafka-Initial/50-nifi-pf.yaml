apiVersion: v1
kind: List
items:
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: nifi-network-policy
  spec:
    podSelector:
      matchLabels:
        app: nifi
    ingress:
    - {}
- apiVersion: v1
  kind: Service
  metadata:
    name: nifi-external
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
      name: ui
    - port: 9090
      protocol: TCP
      targetPort: 9090
      name: client
    selector:
      app: nifi
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: nifi
    name: nifi
  spec:
    ports:
    - name: ui
      port: 8080
      protocol: TCP
      targetPort: ui
    - name: rest
      port: 9090
      protocol: TCP
      targetPort: rest
    selector:
      app: nifi
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: nifi
    name: nifi-headless
  spec:
    clusterIP: None
    ports:
    - name: ui
      port: 8080
      protocol: TCP
      targetPort: ui
    - name: rest
      port: 9090
      protocol: TCP
      targetPort: rest
    selector:
      app: nifi
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    labels:
      app: nifi
    name: nifi
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    selector:
      matchLabels:
        app: nifi
    serviceName: nifi-headless
    template:
      metadata:
        labels:
          app: nifi
      spec:
        containers:
        - name: nifi
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: NIFI_WEB_HTTP_HOST
            value: "localhost"
          - name: NIFI_WEB_HTTP_PORT
            value: "8080"
          image: reg-dhc-americas.app.corpintra.net/myanama/nifi:1.8.0
          imagePullPolicy: IfNotPresent       
          ports:
          - containerPort: 8080
            name: ui
            protocol: TCP
          - containerPort: 9090
            name: rest
            protocol: TCP
          resources: {}
          volumeMounts:
          - mountPath: /opt/data
            name: datadir
        dnsPolicy: ClusterFirst
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        terminationGracePeriodSeconds: 60
        volumes:
        - emptyDir: {}
          name: datadir
    updateStrategy:
      type: OnDelete

