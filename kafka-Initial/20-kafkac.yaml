apiVersion: v1
kind: List
items:
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: kafka-network-policy
  spec:
    podSelector:
      matchLabels:
        app: kafka
    ingress:
    - {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: kafka
    name: kafka
  spec:
    ports:
    - name: broker
      port: 9092
      protocol: TCP
      targetPort: kafka
    - name: broker-ext
      port: 29092
      protocol: TCP
      targetPort: kafka-ext
    selector:
      app: kafka
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    labels:
      app: kafka
    name: kafka-headless
  spec:
    clusterIP: None
    ports:
    - name: broker
      port: 9092
      protocol: TCP
      targetPort: 9092
    - name: broker-ext
      port: 29092
      protocol: TCP
      targetPort: 29092
    selector:
      app: kafka
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    labels:
      app: kafka
    name: kafka
  spec:
    podManagementPolicy: OrderedReady
    replicas: 3
    selector:
      matchLabels:
        app: kafka
    serviceName: kafka-headless
    template:
      metadata:
        labels:
          app: kafka
      spec:
        containers:
        - command:
          - sh
          - -exc
          - |
            unset KAFKA_PORT && \
            export KAFKA_BROKER_ID=${POD_NAME##*-} && \
            export KAFKA_ZOOKEEPER_CONNECT=zookeeper-headless:2181 && \
            export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_NAME}.kafka-headless:29092 && \
            exec /etc/confluent/docker/run
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: KAFKA_HEAP_OPTS
            value: -Xmx1G -Xms1G
          - name: KAFKA_SOCKET_REQUEST_MAX_BYTES
            value: "1347375956"
          - name: KAFKA_LOG_DIRS
            value: /opt/kafka/data/logs
          - name: KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE
            value: "false"
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "3"
          - name: KAFKA_JMX_PORT
            value: "5555"
          image: reg-dhc-americas.app.corpintra.net/myanama/kafka:2.1.0
          imagePullPolicy: IfNotPresent
          name: kafka-broker
          ports:
          - containerPort: 9092
            name: kafka
            protocol: TCP
          - containerPort: 29092
            name: kafka-ext
            protocol: TCP
          resources: {}
          volumeMounts:
          - mountPath: /opt/kafka/data
            name: datadir
        dnsPolicy: ClusterFirst
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        terminationGracePeriodSeconds: 60
        volumes:
        - emptyDir: {}
          name: datadir
    updateStrategy:
      type: OnDelete