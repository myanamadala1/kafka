apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: dhc-restricted
    creationTimestamp: "2019-03-01T20:16:21Z"
    generateName: elasticsearch-
    labels:
      app: elasticsearch
      controller-revision-hash: elasticsearch-65db4d4bff
      statefulset.kubernetes.io/pod-name: elasticsearch-0
    name: elasticsearch-0
    namespace: garagetest
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: elasticsearch
      uid: e112e31b-3c5e-11e9-984c-fa163ef36fb5
    resourceVersion: "11262892"
    selfLink: /api/v1/namespaces/garagetest/pods/elasticsearch-0
    uid: e13d0348-3c5e-11e9-984c-fa163ef36fb5
  spec:
    containers:
    - env:
      - name: discovery.type
        value: single-node
      image: reg-dhc-americas.app.corpintra.net/myanama/elasticsearch-oss:6.6.1
      imagePullPolicy: IfNotPresent
      name: elasticsearch
      ports:
      - containerPort: 9200
        name: client
        protocol: TCP
      - containerPort: 9300
        name: server
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/elasticsearch
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dzhrm
        readOnly: true
    dnsPolicy: ClusterFirst
    hostname: elasticsearch-0
    nodeName: c04p011-kube-node02
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
      supplementalGroups:
      - 1
    serviceAccount: default
    serviceAccountName: default
    subdomain: elasticsearch-headless
    terminationGracePeriodSeconds: 1800
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-elasticsearch-0
    - name: default-token-dzhrm
      secret:
        defaultMode: 420
        secretName: default-token-dzhrm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-03-01T20:16:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-03-01T20:17:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: null
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-03-01T20:16:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b4a481053c295e94b56a39b17e67141d9350667b5bb522c6fd3868e9b569cd30
      image: reg-dhc-americas.app.corpintra.net/myanama/elasticsearch-oss:6.6.1
      imageID: docker-pullable://reg-dhc-americas.app.corpintra.net/myanama/elasticsearch-oss@sha256:b78f4331fd07665cc6f30013e058ac6fe9eec8905deb0c802a295db986ffba5e
      lastState: {}
      name: elasticsearch
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-03-01T20:17:21Z"
    hostIP: 10.6.0.16
    phase: Running
    podIP: 10.6.16.32
    qosClass: BestEffort
    startTime: "2019-03-01T20:16:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: dhc-restricted
    creationTimestamp: "2019-03-01T19:05:04Z"
    generateName: garagetest-webui-deployment-6644d57d65-
    labels:
      app: garagetest-webui-app
      pod-template-hash: "2200813821"
    name: garagetest-webui-deployment-6644d57d65-6d6xd
    namespace: garagetest
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: garagetest-webui-deployment-6644d57d65
      uid: 385d87eb-32e8-11e9-b70a-fa163e4ff25e
    resourceVersion: "11252587"
    selfLink: /api/v1/namespaces/garagetest/pods/garagetest-webui-deployment-6644d57d65-6d6xd
    uid: ec1fabe0-3c54-11e9-984c-fa163ef36fb5
  spec:
    containers:
    - image: reg-dhc-americas.app.corpintra.net/nggarage/springboot-oidc:1.5.19-v1
      imagePullPolicy: Always
      name: garagetest-webui-container
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dzhrm
        readOnly: true
    dnsPolicy: ClusterFirst
    nodeName: c04p011-kube-node02
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 9999
      runAsUser: 1000
      supplementalGroups:
      - 9999
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-dzhrm
      secret:
        defaultMode: 420
        secretName: default-token-dzhrm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-03-01T19:05:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-03-01T19:05:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: null
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-03-01T19:05:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://fbb77a8265aadfb562c462b8fea6d929b9fc8650a82a272f0bdd9d533d298ef6
      image: reg-dhc-americas.app.corpintra.net/nggarage/springboot-oidc:1.5.19-v1
      imageID: docker-pullable://reg-dhc-americas.app.corpintra.net/nggarage/springboot-oidc@sha256:8ae789ab50031ee273dc04a810b17b189279efb2fd113fa941b3ad6e8a7eff52
      lastState: {}
      name: garagetest-webui-container
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-03-01T19:05:08Z"
    hostIP: 10.6.0.16
    phase: Running
    podIP: 10.6.16.30
    qosClass: BestEffort
    startTime: "2019-03-01T19:05:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: dhc-privileged
    creationTimestamp: "2019-02-22T09:42:53Z"
    generateName: garagetest-webui-deployment-6644d57d65-
    labels:
      app: garagetest-webui-app
      pod-template-hash: "2200813821"
    name: garagetest-webui-deployment-6644d57d65-fl7z6
    namespace: garagetest
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: garagetest-webui-deployment-6644d57d65
      uid: 385d87eb-32e8-11e9-b70a-fa163e4ff25e
    resourceVersion: "9701306"
    selfLink: /api/v1/namespaces/garagetest/pods/garagetest-webui-deployment-6644d57d65-fl7z6
    uid: 39def194-3686-11e9-984c-fa163ef36fb5
  spec:
    containers:
    - image: reg-dhc-americas.app.corpintra.net/nggarage/springboot-oidc:1.5.19-v1
      imagePullPolicy: Always
      name: garagetest-webui-container
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dzhrm
        readOnly: true
    dnsPolicy: ClusterFirst
    nodeName: c04p011-kube-node03
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 9999
      runAsUser: 1000
      supplementalGroups:
      - 9999
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-dzhrm
      secret:
        defaultMode: 420
        secretName: default-token-dzhrm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-02-22T09:42:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-02-22T09:43:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: null
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-02-22T09:42:53Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://58c24dbace5824b104f0bf618d157ff324a02333e9a68124dcfc34ae733c2ac7
      image: reg-dhc-americas.app.corpintra.net/nggarage/springboot-oidc:1.5.19-v1
      imageID: docker-pullable://reg-dhc-americas.app.corpintra.net/nggarage/springboot-oidc@sha256:8ae789ab50031ee273dc04a810b17b189279efb2fd113fa941b3ad6e8a7eff52
      lastState: {}
      name: garagetest-webui-container
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-02-22T09:43:55Z"
    hostIP: 10.6.0.14
    phase: Running
    podIP: 10.6.14.8
    qosClass: BestEffort
    startTime: "2019-02-22T09:42:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: dhc-restricted
    creationTimestamp: "2019-03-01T19:01:26Z"
    generateName: garagetest-webui-deployment-6644d57d65-
    labels:
      app: garagetest-webui-app
      pod-template-hash: "2200813821"
    name: garagetest-webui-deployment-6644d57d65-lrmp2
    namespace: garagetest
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: garagetest-webui-deployment-6644d57d65
      uid: 385d87eb-32e8-11e9-b70a-fa163e4ff25e
    resourceVersion: "11251954"
    selfLink: /api/v1/namespaces/garagetest/pods/garagetest-webui-deployment-6644d57d65-lrmp2
    uid: 69f44c3e-3c54-11e9-984c-fa163ef36fb5
  spec:
    containers:
    - image: reg-dhc-americas.app.corpintra.net/nggarage/springboot-oidc:1.5.19-v1
      imagePullPolicy: Always
      name: garagetest-webui-container
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dzhrm
        readOnly: true
    dnsPolicy: ClusterFirst
    nodeName: c04p011-kube-node01
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 9999
      runAsUser: 1000
      supplementalGroups:
      - 9999
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-dzhrm
      secret:
        defaultMode: 420
        secretName: default-token-dzhrm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-03-01T19:01:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-03-01T19:01:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: null
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-03-01T19:01:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://430caea42ea5bf864631933febaa799ba76e80d813fa57659271bf44e8736d5b
      image: reg-dhc-americas.app.corpintra.net/nggarage/springboot-oidc:1.5.19-v1
      imageID: docker-pullable://reg-dhc-americas.app.corpintra.net/nggarage/springboot-oidc@sha256:8ae789ab50031ee273dc04a810b17b189279efb2fd113fa941b3ad6e8a7eff52
      lastState: {}
      name: garagetest-webui-container
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-03-01T19:01:30Z"
    hostIP: 10.6.0.4
    phase: Running
    podIP: 10.6.4.36
    qosClass: BestEffort
    startTime: "2019-03-01T19:01:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: dhc-restricted
    creationTimestamp: "2019-02-28T20:27:19Z"
    generateName: garagetest-webui-deployment-6644d57d65-
    labels:
      app: garagetest-webui-app
      pod-template-hash: "2200813821"
    name: garagetest-webui-deployment-6644d57d65-xjwdg
    namespace: garagetest
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: garagetest-webui-deployment-6644d57d65
      uid: 385d87eb-32e8-11e9-b70a-fa163e4ff25e
    resourceVersion: "11027319"
    selfLink: /api/v1/namespaces/garagetest/pods/garagetest-webui-deployment-6644d57d65-xjwdg
    uid: 3ebeefda-3b97-11e9-984c-fa163ef36fb5
  spec:
    containers:
    - image: reg-dhc-americas.app.corpintra.net/nggarage/springboot-oidc:1.5.19-v1
      imagePullPolicy: Always
      name: garagetest-webui-container
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dzhrm
        readOnly: true
    dnsPolicy: ClusterFirst
    nodeName: c04p011-kube-node01
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 9999
      runAsUser: 1000
      supplementalGroups:
      - 9999
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-dzhrm
      secret:
        defaultMode: 420
        secretName: default-token-dzhrm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T20:27:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T20:27:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: null
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T20:27:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://c86e2a32b8b7a85590c6bff5fce603a3b2e14d2ac665ad516742ff0b90fae9be
      image: reg-dhc-americas.app.corpintra.net/nggarage/springboot-oidc:1.5.19-v1
      imageID: docker-pullable://reg-dhc-americas.app.corpintra.net/nggarage/springboot-oidc@sha256:8ae789ab50031ee273dc04a810b17b189279efb2fd113fa941b3ad6e8a7eff52
      lastState: {}
      name: garagetest-webui-container
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-02-28T20:27:23Z"
    hostIP: 10.6.0.4
    phase: Running
    podIP: 10.6.4.34
    qosClass: BestEffort
    startTime: "2019-02-28T20:27:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: dhc-privileged
    creationTimestamp: "2019-02-22T09:42:53Z"
    generateName: garagetest-webui-deployment-6644d57d65-
    labels:
      app: garagetest-webui-app
      pod-template-hash: "2200813821"
    name: garagetest-webui-deployment-6644d57d65-z6fsl
    namespace: garagetest
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: garagetest-webui-deployment-6644d57d65
      uid: 385d87eb-32e8-11e9-b70a-fa163e4ff25e
    resourceVersion: "9701264"
    selfLink: /api/v1/namespaces/garagetest/pods/garagetest-webui-deployment-6644d57d65-z6fsl
    uid: 39b368fe-3686-11e9-984c-fa163ef36fb5
  spec:
    containers:
    - image: reg-dhc-americas.app.corpintra.net/nggarage/springboot-oidc:1.5.19-v1
      imagePullPolicy: Always
      name: garagetest-webui-container
      ports:
      - containerPort: 8080
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dzhrm
        readOnly: true
    dnsPolicy: ClusterFirst
    nodeName: c04p011-kube-node03
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 9999
      runAsUser: 1000
      supplementalGroups:
      - 9999
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-dzhrm
      secret:
        defaultMode: 420
        secretName: default-token-dzhrm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-02-22T09:42:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-02-22T09:43:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: null
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-02-22T09:42:53Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://21b0f5385987b14fcba0d34b92484db52c02c64773e72989f673c6258ab00d44
      image: reg-dhc-americas.app.corpintra.net/nggarage/springboot-oidc:1.5.19-v1
      imageID: docker-pullable://reg-dhc-americas.app.corpintra.net/nggarage/springboot-oidc@sha256:8ae789ab50031ee273dc04a810b17b189279efb2fd113fa941b3ad6e8a7eff52
      lastState: {}
      name: garagetest-webui-container
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-02-22T09:43:40Z"
    hostIP: 10.6.0.14
    phase: Running
    podIP: 10.6.14.6
    qosClass: BestEffort
    startTime: "2019-02-22T09:42:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: dhc-restricted
    creationTimestamp: "2019-02-28T17:25:22Z"
    generateName: kafka-
    labels:
      app: kafka
      controller-revision-hash: kafka-65497ff959
      statefulset.kubernetes.io/pod-name: kafka-0
    name: kafka-0
    namespace: garagetest
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: kafka
      uid: d3b19d0b-3b7d-11e9-984c-fa163ef36fb5
    resourceVersion: "10996940"
    selfLink: /api/v1/namespaces/garagetest/pods/kafka-0
    uid: d3cb9bbd-3b7d-11e9-984c-fa163ef36fb5
  spec:
    containers:
    - command:
      - sh
      - -exc
      - |
        unset KAFKA_PORT && \
        export KAFKA_BROKER_ID=${POD_NAME##*-} && \
        export KAFKA_ZOOKEEPER_CONNECT=zookeeper-headless:2181 && \
        export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_NAME}.kafka-headless:29092 && \
        exec /etc/confluent/docker/run
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KAFKA_HEAP_OPTS
        value: -Xmx1G -Xms1G
      - name: KAFKA_LOG_DIRS
        value: /opt/kafka/data/logs
      - name: KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE
        value: "false"
      - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
        value: "3"
      - name: KAFKA_JMX_PORT
        value: "5555"
      image: reg-dhc-americas.app.corpintra.net/myanama/kafka:2.0.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -ec
          - /usr/bin/jps | /bin/grep -q SupportedKafka
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kafka-broker
      ports:
      - containerPort: 9092
        name: kafka
        protocol: TCP
      - containerPort: 29092
        name: kafka-ext
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: kafka-ext
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/kafka/data
        name: datadir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dzhrm
        readOnly: true
    dnsPolicy: ClusterFirst
    hostname: kafka-0
    nodeName: c04p011-kube-node01
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
      supplementalGroups:
      - 1
    serviceAccount: default
    serviceAccountName: default
    subdomain: kafka-headless
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: datadir
    - name: default-token-dzhrm
      secret:
        defaultMode: 420
        secretName: default-token-dzhrm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:25:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:25:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: null
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:25:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f11816e458b61c9201043e4791559f184810c88b186864d03abcf45f8af23f55
      image: reg-dhc-americas.app.corpintra.net/myanama/kafka:2.0.0
      imageID: docker-pullable://reg-dhc-americas.app.corpintra.net/myanama/kafka@sha256:afba8bf933263fe1e959cd625053e5a616d3ddbfe27b8a8dff95f0aa80a8bc35
      lastState: {}
      name: kafka-broker
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-02-28T17:25:23Z"
    hostIP: 10.6.0.4
    phase: Running
    podIP: 10.6.4.31
    qosClass: BestEffort
    startTime: "2019-02-28T17:25:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: dhc-restricted
    creationTimestamp: "2019-02-28T17:25:59Z"
    generateName: kafka-
    labels:
      app: kafka
      controller-revision-hash: kafka-65497ff959
      statefulset.kubernetes.io/pod-name: kafka-1
    name: kafka-1
    namespace: garagetest
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: kafka
      uid: d3b19d0b-3b7d-11e9-984c-fa163ef36fb5
    resourceVersion: "10997066"
    selfLink: /api/v1/namespaces/garagetest/pods/kafka-1
    uid: ea2aeef0-3b7d-11e9-984c-fa163ef36fb5
  spec:
    containers:
    - command:
      - sh
      - -exc
      - |
        unset KAFKA_PORT && \
        export KAFKA_BROKER_ID=${POD_NAME##*-} && \
        export KAFKA_ZOOKEEPER_CONNECT=zookeeper-headless:2181 && \
        export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_NAME}.kafka-headless:29092 && \
        exec /etc/confluent/docker/run
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KAFKA_HEAP_OPTS
        value: -Xmx1G -Xms1G
      - name: KAFKA_LOG_DIRS
        value: /opt/kafka/data/logs
      - name: KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE
        value: "false"
      - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
        value: "3"
      - name: KAFKA_JMX_PORT
        value: "5555"
      image: reg-dhc-americas.app.corpintra.net/myanama/kafka:2.0.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -ec
          - /usr/bin/jps | /bin/grep -q SupportedKafka
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kafka-broker
      ports:
      - containerPort: 9092
        name: kafka
        protocol: TCP
      - containerPort: 29092
        name: kafka-ext
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: kafka-ext
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/kafka/data
        name: datadir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dzhrm
        readOnly: true
    dnsPolicy: ClusterFirst
    hostname: kafka-1
    nodeName: c04p011-kube-node03
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
      supplementalGroups:
      - 1
    serviceAccount: default
    serviceAccountName: default
    subdomain: kafka-headless
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: datadir
    - name: default-token-dzhrm
      secret:
        defaultMode: 420
        secretName: default-token-dzhrm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:25:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:26:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: null
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:25:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://aee73cad30a299452f8bb9edf3444d22c10833b9bf3f616e79771d32d6c51f9a
      image: reg-dhc-americas.app.corpintra.net/myanama/kafka:2.0.0
      imageID: docker-pullable://reg-dhc-americas.app.corpintra.net/myanama/kafka@sha256:afba8bf933263fe1e959cd625053e5a616d3ddbfe27b8a8dff95f0aa80a8bc35
      lastState: {}
      name: kafka-broker
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-02-28T17:26:01Z"
    hostIP: 10.6.0.14
    phase: Running
    podIP: 10.6.14.35
    qosClass: BestEffort
    startTime: "2019-02-28T17:25:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: dhc-restricted
    creationTimestamp: "2019-02-28T17:26:39Z"
    generateName: kafka-
    labels:
      app: kafka
      controller-revision-hash: kafka-65497ff959
      statefulset.kubernetes.io/pod-name: kafka-2
    name: kafka-2
    namespace: garagetest
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: kafka
      uid: d3b19d0b-3b7d-11e9-984c-fa163ef36fb5
    resourceVersion: "10997170"
    selfLink: /api/v1/namespaces/garagetest/pods/kafka-2
    uid: 01e953c1-3b7e-11e9-984c-fa163ef36fb5
  spec:
    containers:
    - command:
      - sh
      - -exc
      - |
        unset KAFKA_PORT && \
        export KAFKA_BROKER_ID=${POD_NAME##*-} && \
        export KAFKA_ZOOKEEPER_CONNECT=zookeeper-headless:2181 && \
        export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_NAME}.kafka-headless:29092 && \
        exec /etc/confluent/docker/run
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KAFKA_HEAP_OPTS
        value: -Xmx1G -Xms1G
      - name: KAFKA_LOG_DIRS
        value: /opt/kafka/data/logs
      - name: KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE
        value: "false"
      - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
        value: "3"
      - name: KAFKA_JMX_PORT
        value: "5555"
      image: reg-dhc-americas.app.corpintra.net/myanama/kafka:2.0.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -ec
          - /usr/bin/jps | /bin/grep -q SupportedKafka
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kafka-broker
      ports:
      - containerPort: 9092
        name: kafka
        protocol: TCP
      - containerPort: 29092
        name: kafka-ext
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: kafka-ext
        timeoutSeconds: 5
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/kafka/data
        name: datadir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dzhrm
        readOnly: true
    dnsPolicy: ClusterFirst
    hostname: kafka-2
    nodeName: c04p011-kube-node01
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
      supplementalGroups:
      - 1
    serviceAccount: default
    serviceAccountName: default
    subdomain: kafka-headless
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: datadir
    - name: default-token-dzhrm
      secret:
        defaultMode: 420
        secretName: default-token-dzhrm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:26:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:27:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: null
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:26:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://1aad08eefdd125993abb816357efa9abc9b8992b89a32cf550bca2b57a72dac8
      image: reg-dhc-americas.app.corpintra.net/myanama/kafka:2.0.0
      imageID: docker-pullable://reg-dhc-americas.app.corpintra.net/myanama/kafka@sha256:afba8bf933263fe1e959cd625053e5a616d3ddbfe27b8a8dff95f0aa80a8bc35
      lastState: {}
      name: kafka-broker
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-02-28T17:26:41Z"
    hostIP: 10.6.0.4
    phase: Running
    podIP: 10.6.4.32
    qosClass: BestEffort
    startTime: "2019-02-28T17:26:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: dhc-restricted
    creationTimestamp: "2019-03-01T20:18:02Z"
    generateName: kibana-
    labels:
      app: kibana
      controller-revision-hash: kibana-68858d95cf
      statefulset.kubernetes.io/pod-name: kibana-0
    name: kibana-0
    namespace: garagetest
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: kibana
      uid: 1d754eff-3c5f-11e9-984c-fa163ef36fb5
    resourceVersion: "11263117"
    selfLink: /api/v1/namespaces/garagetest/pods/kibana-0
    uid: 1d907ae9-3c5f-11e9-984c-fa163ef36fb5
  spec:
    containers:
    - env:
      - name: elasticsearch.hosts
        value: http://elasticsearch-headless:9200
      - name: server.name
        value: ng-garage-nafta-qa.app.corpintra.net
      image: reg-dhc-americas.app.corpintra.net/myanama/kibana-oss:6.6.1
      imagePullPolicy: IfNotPresent
      name: kibana
      ports:
      - containerPort: 5601
        name: client
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kibana
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dzhrm
        readOnly: true
    dnsPolicy: ClusterFirst
    hostname: kibana-0
    nodeName: c04p011-kube-node03
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
      supplementalGroups:
      - 1
    serviceAccount: default
    serviceAccountName: default
    subdomain: kibana-headless
    terminationGracePeriodSeconds: 1800
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-kibana-0
    - name: default-token-dzhrm
      secret:
        defaultMode: 420
        secretName: default-token-dzhrm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-03-01T20:18:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-03-01T20:18:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: null
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-03-01T20:18:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://8ab02474bbfd1c1f294b18d03c54ff388516fcd36fc61d8e2aea2534f1b83d00
      image: reg-dhc-americas.app.corpintra.net/myanama/kibana-oss:6.6.1
      imageID: docker-pullable://reg-dhc-americas.app.corpintra.net/myanama/kibana-oss@sha256:32cbac34f98540214ef7bf2396ce37f7b4b1c6d9edde380efd5a83cb37f9a75e
      lastState: {}
      name: kibana
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-03-01T20:18:42Z"
    hostIP: 10.6.0.14
    phase: Running
    podIP: 10.6.14.44
    qosClass: BestEffort
    startTime: "2019-03-01T20:18:02Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: dhc-restricted
    creationTimestamp: "2019-02-28T17:37:42Z"
    generateName: nifi-
    labels:
      app: nifi
      controller-revision-hash: nifi-7dc7c48b79
      statefulset.kubernetes.io/pod-name: nifi-0
    name: nifi-0
    namespace: garagetest
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: nifi
      uid: 8cb2b71e-3b7f-11e9-984c-fa163ef36fb5
    resourceVersion: "10999515"
    selfLink: /api/v1/namespaces/garagetest/pods/nifi-0
    uid: 8cc9bd97-3b7f-11e9-984c-fa163ef36fb5
  spec:
    containers:
    - env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: reg-dhc-americas.app.corpintra.net/myanama/nifi:1.8.0
      imagePullPolicy: IfNotPresent
      name: nifi-broker
      ports:
      - containerPort: 8080
        name: nifi
        protocol: TCP
      - containerPort: 9090
        name: nifi-rest-api
        protocol: TCP
      - containerPort: 10000
        name: nifi-ext
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/data
        name: datadir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dzhrm
        readOnly: true
    dnsPolicy: ClusterFirst
    hostname: nifi-0
    nodeName: c04p011-kube-node04
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
      supplementalGroups:
      - 1
    serviceAccount: default
    serviceAccountName: default
    subdomain: nifi-headless
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: datadir
    - name: default-token-dzhrm
      secret:
        defaultMode: 420
        secretName: default-token-dzhrm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:37:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:39:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: null
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:37:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://617a907bec994b14718b731e1785f405b17e3c101026b7ce7ae7aab1f209b619
      image: reg-dhc-americas.app.corpintra.net/myanama/nifi:1.8.0
      imageID: docker-pullable://reg-dhc-americas.app.corpintra.net/myanama/nifi@sha256:c4e2b9a666127dc676a1bc437158a9bcb1ffaaea608119df0bf51780e4ac21e9
      lastState: {}
      name: nifi-broker
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-02-28T17:39:43Z"
    hostIP: 10.6.0.8
    phase: Running
    podIP: 10.6.8.29
    qosClass: BestEffort
    startTime: "2019-02-28T17:37:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"name":"testclient","namespace":"garagetest"},"spec":{"containers":[{"command":["sh","-c","exec tail -f /dev/null"],"image":"reg-dhc-americas.app.corpintra.net/myanama/solkafka","name":"kafka"}],"securityContext":{"runAsUser":1000}}}
      kubernetes.io/psp: dhc-restricted
    creationTimestamp: "2019-02-22T22:54:21Z"
    name: testclient
    namespace: garagetest
    resourceVersion: "9770343"
    selfLink: /api/v1/namespaces/garagetest/pods/testclient
    uid: ca96624c-36f4-11e9-984c-fa163ef36fb5
  spec:
    containers:
    - command:
      - sh
      - -c
      - exec tail -f /dev/null
      image: reg-dhc-americas.app.corpintra.net/myanama/solkafka
      imagePullPolicy: Always
      name: kafka
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dzhrm
        readOnly: true
    dnsPolicy: ClusterFirst
    nodeName: c04p011-kube-node04
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1
      runAsUser: 1000
      supplementalGroups:
      - 1
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-dzhrm
      secret:
        defaultMode: 420
        secretName: default-token-dzhrm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-02-22T22:54:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-02-22T22:54:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: null
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-02-22T22:54:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://56d30066ea44cba66ce407de0ae682e09ccd1039241651f09325d1e7aa886a28
      image: reg-dhc-americas.app.corpintra.net/myanama/solkafka:latest
      imageID: docker-pullable://reg-dhc-americas.app.corpintra.net/myanama/solkafka@sha256:b5d5683ec8913ef7dd0963f8d38600d25de15f3b8edbeaddd64bbc4547f139ad
      lastState: {}
      name: kafka
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-02-22T22:54:24Z"
    hostIP: 10.6.0.8
    phase: Running
    podIP: 10.6.8.26
    qosClass: BestEffort
    startTime: "2019-02-22T22:54:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: dhc-restricted
    creationTimestamp: "2019-02-28T17:21:50Z"
    generateName: zookeeper-
    labels:
      app: zookeeper
      controller-revision-hash: zookeeper-7f494db49b
      statefulset.kubernetes.io/pod-name: zookeeper-0
    name: zookeeper-0
    namespace: garagetest
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: zookeeper
      uid: 5586c208-3b7d-11e9-984c-fa163ef36fb5
    resourceVersion: "10996250"
    selfLink: /api/v1/namespaces/garagetest/pods/zookeeper-0
    uid: 55a85044-3b7d-11e9-984c-fa163ef36fb5
  spec:
    containers:
    - command:
      - /bin/bash
      - -xec
      - zkGenConfig.sh && exec zkServer.sh start-foreground
      env:
      - name: ZK_REPLICAS
        value: "3"
      - name: JMXAUTH
        value: "false"
      - name: JMXDISABLE
        value: "false"
      - name: JMXPORT
        value: "1099"
      - name: JMXSSL
        value: "false"
      - name: ZK_CLIENT_PORT
        value: "2181"
      - name: ZK_ELECTION_PORT
        value: "3888"
      - name: ZK_HEAP_SIZE
        value: 2G
      - name: ZK_INIT_LIMIT
        value: "5"
      - name: ZK_LOG_LEVEL
        value: INFO
      - name: ZK_MAX_CLIENT_CNXNS
        value: "60"
      - name: ZK_MAX_SESSION_TIMEOUT
        value: "40000"
      - name: ZK_MIN_SESSION_TIMEOUT
        value: "4000"
      - name: ZK_PURGE_INTERVAL
        value: "0"
      - name: ZK_SERVER_PORT
        value: "2888"
      - name: ZK_SNAP_RETAIN_COUNT
        value: "3"
      - name: ZK_SYNC_LIMIT
        value: "10"
      - name: ZK_TICK_TIME
        value: "2000"
      image: reg-dhc-americas.app.corpintra.net/myanama/zookeeper:3.4.10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - zkOk.sh
        failureThreshold: 3
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: zookeeper
      ports:
      - containerPort: 2181
        name: client
        protocol: TCP
      - containerPort: 3888
        name: election
        protocol: TCP
      - containerPort: 2888
        name: server
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - zkOk.sh
        failureThreshold: 3
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/zookeeper
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dzhrm
        readOnly: true
    dnsPolicy: ClusterFirst
    hostname: zookeeper-0
    nodeName: c04p011-kube-node01
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
      supplementalGroups:
      - 1
    serviceAccount: default
    serviceAccountName: default
    subdomain: zookeeper-headless
    terminationGracePeriodSeconds: 1800
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-zookeeper-0
    - name: default-token-dzhrm
      secret:
        defaultMode: 420
        secretName: default-token-dzhrm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:21:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:22:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: null
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:21:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://fd5fd2dafcc5edee8b62a531af341ce790a83eb94127ceb8b53e644fe6a40b6e
      image: reg-dhc-americas.app.corpintra.net/myanama/zookeeper:3.4.10
      imageID: docker-pullable://reg-dhc-americas.app.corpintra.net/myanama/zookeeper@sha256:2c1794c56032afc171893f5afebe0ac1366aa371242925670bcc1b2d2a5b88f2
      lastState: {}
      name: zookeeper
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-02-28T17:22:18Z"
    hostIP: 10.6.0.4
    phase: Running
    podIP: 10.6.4.30
    qosClass: BestEffort
    startTime: "2019-02-28T17:21:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: dhc-restricted
    creationTimestamp: "2019-02-28T17:22:40Z"
    generateName: zookeeper-
    labels:
      app: zookeeper
      controller-revision-hash: zookeeper-7f494db49b
      statefulset.kubernetes.io/pod-name: zookeeper-1
    name: zookeeper-1
    namespace: garagetest
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: zookeeper
      uid: 5586c208-3b7d-11e9-984c-fa163ef36fb5
    resourceVersion: "10996501"
    selfLink: /api/v1/namespaces/garagetest/pods/zookeeper-1
    uid: 7358917a-3b7d-11e9-984c-fa163ef36fb5
  spec:
    containers:
    - command:
      - /bin/bash
      - -xec
      - zkGenConfig.sh && exec zkServer.sh start-foreground
      env:
      - name: ZK_REPLICAS
        value: "3"
      - name: JMXAUTH
        value: "false"
      - name: JMXDISABLE
        value: "false"
      - name: JMXPORT
        value: "1099"
      - name: JMXSSL
        value: "false"
      - name: ZK_CLIENT_PORT
        value: "2181"
      - name: ZK_ELECTION_PORT
        value: "3888"
      - name: ZK_HEAP_SIZE
        value: 2G
      - name: ZK_INIT_LIMIT
        value: "5"
      - name: ZK_LOG_LEVEL
        value: INFO
      - name: ZK_MAX_CLIENT_CNXNS
        value: "60"
      - name: ZK_MAX_SESSION_TIMEOUT
        value: "40000"
      - name: ZK_MIN_SESSION_TIMEOUT
        value: "4000"
      - name: ZK_PURGE_INTERVAL
        value: "0"
      - name: ZK_SERVER_PORT
        value: "2888"
      - name: ZK_SNAP_RETAIN_COUNT
        value: "3"
      - name: ZK_SYNC_LIMIT
        value: "10"
      - name: ZK_TICK_TIME
        value: "2000"
      image: reg-dhc-americas.app.corpintra.net/myanama/zookeeper:3.4.10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - zkOk.sh
        failureThreshold: 3
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: zookeeper
      ports:
      - containerPort: 2181
        name: client
        protocol: TCP
      - containerPort: 3888
        name: election
        protocol: TCP
      - containerPort: 2888
        name: server
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - zkOk.sh
        failureThreshold: 3
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/zookeeper
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dzhrm
        readOnly: true
    dnsPolicy: ClusterFirst
    hostname: zookeeper-1
    nodeName: c04p011-kube-node04
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
      supplementalGroups:
      - 1
    serviceAccount: default
    serviceAccountName: default
    subdomain: zookeeper-headless
    terminationGracePeriodSeconds: 1800
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-zookeeper-1
    - name: default-token-dzhrm
      secret:
        defaultMode: 420
        secretName: default-token-dzhrm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:22:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:23:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: null
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:22:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://d6d3c2a1da18f494a365eff3bbd47e17f1467ca2bffbc409e712d618b435b404
      image: reg-dhc-americas.app.corpintra.net/myanama/zookeeper:3.4.10
      imageID: docker-pullable://reg-dhc-americas.app.corpintra.net/myanama/zookeeper@sha256:2c1794c56032afc171893f5afebe0ac1366aa371242925670bcc1b2d2a5b88f2
      lastState: {}
      name: zookeeper
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-02-28T17:23:19Z"
    hostIP: 10.6.0.8
    phase: Running
    podIP: 10.6.8.28
    qosClass: BestEffort
    startTime: "2019-02-28T17:22:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/psp: dhc-restricted
    creationTimestamp: "2019-02-28T17:23:49Z"
    generateName: zookeeper-
    labels:
      app: zookeeper
      controller-revision-hash: zookeeper-7f494db49b
      statefulset.kubernetes.io/pod-name: zookeeper-2
    name: zookeeper-2
    namespace: garagetest
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: zookeeper
      uid: 5586c208-3b7d-11e9-984c-fa163ef36fb5
    resourceVersion: "10996712"
    selfLink: /api/v1/namespaces/garagetest/pods/zookeeper-2
    uid: 9c4285b9-3b7d-11e9-984c-fa163ef36fb5
  spec:
    containers:
    - command:
      - /bin/bash
      - -xec
      - zkGenConfig.sh && exec zkServer.sh start-foreground
      env:
      - name: ZK_REPLICAS
        value: "3"
      - name: JMXAUTH
        value: "false"
      - name: JMXDISABLE
        value: "false"
      - name: JMXPORT
        value: "1099"
      - name: JMXSSL
        value: "false"
      - name: ZK_CLIENT_PORT
        value: "2181"
      - name: ZK_ELECTION_PORT
        value: "3888"
      - name: ZK_HEAP_SIZE
        value: 2G
      - name: ZK_INIT_LIMIT
        value: "5"
      - name: ZK_LOG_LEVEL
        value: INFO
      - name: ZK_MAX_CLIENT_CNXNS
        value: "60"
      - name: ZK_MAX_SESSION_TIMEOUT
        value: "40000"
      - name: ZK_MIN_SESSION_TIMEOUT
        value: "4000"
      - name: ZK_PURGE_INTERVAL
        value: "0"
      - name: ZK_SERVER_PORT
        value: "2888"
      - name: ZK_SNAP_RETAIN_COUNT
        value: "3"
      - name: ZK_SYNC_LIMIT
        value: "10"
      - name: ZK_TICK_TIME
        value: "2000"
      image: reg-dhc-americas.app.corpintra.net/myanama/zookeeper:3.4.10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - zkOk.sh
        failureThreshold: 3
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: zookeeper
      ports:
      - containerPort: 2181
        name: client
        protocol: TCP
      - containerPort: 3888
        name: election
        protocol: TCP
      - containerPort: 2888
        name: server
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - zkOk.sh
        failureThreshold: 3
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/zookeeper
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-dzhrm
        readOnly: true
    dnsPolicy: ClusterFirst
    hostname: zookeeper-2
    nodeName: c04p011-kube-node03
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
      supplementalGroups:
      - 1
    serviceAccount: default
    serviceAccountName: default
    subdomain: zookeeper-headless
    terminationGracePeriodSeconds: 1800
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-zookeeper-2
    - name: default-token-dzhrm
      secret:
        defaultMode: 420
        secretName: default-token-dzhrm
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:23:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:24:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: null
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-02-28T17:23:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://64ef8088f58632c42528b724dc07030ba5dc8f9fd9b7ad9a073b06c053fe0bc8
      image: reg-dhc-americas.app.corpintra.net/myanama/zookeeper:3.4.10
      imageID: docker-pullable://reg-dhc-americas.app.corpintra.net/myanama/zookeeper@sha256:2c1794c56032afc171893f5afebe0ac1366aa371242925670bcc1b2d2a5b88f2
      lastState: {}
      name: zookeeper
      ready: true
      restartCount: 0
      state:
        running:
          startedAt: "2019-02-28T17:24:25Z"
    hostIP: 10.6.0.14
    phase: Running
    podIP: 10.6.14.34
    qosClass: BestEffort
    startTime: "2019-02-28T17:23:49Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"elasticsearch"},"name":"elasticsearch","namespace":"garagetest"},"spec":{"ports":[{"name":"client","port":9200,"protocol":"TCP","targetPort":"client"}],"selector":{"app":"elasticsearch"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2019-03-01T20:16:20Z"
    labels:
      app: elasticsearch
    name: elasticsearch
    namespace: garagetest
    resourceVersion: "11262747"
    selfLink: /api/v1/namespaces/garagetest/services/elasticsearch
    uid: e0932e20-3c5e-11e9-984c-fa163ef36fb5
  spec:
    clusterIP: 10.254.237.217
    ports:
    - name: client
      port: 9200
      protocol: TCP
      targetPort: client
    selector:
      app: elasticsearch
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"elasticsearch"},"name":"elasticsearch-headless","namespace":"garagetest"},"spec":{"clusterIP":"None","ports":[{"name":"client","port":9200,"protocol":"TCP","targetPort":"client"},{"name":"server","port":9300,"protocol":"TCP","targetPort":"server"}],"selector":{"app":"elasticsearch"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2019-03-01T20:16:20Z"
    labels:
      app: elasticsearch
    name: elasticsearch-headless
    namespace: garagetest
    resourceVersion: "11262750"
    selfLink: /api/v1/namespaces/garagetest/services/elasticsearch-headless
    uid: e0d821bf-3c5e-11e9-984c-fa163ef36fb5
  spec:
    clusterIP: None
    ports:
    - name: client
      port: 9200
      protocol: TCP
      targetPort: client
    - name: server
      port: 9300
      protocol: TCP
      targetPort: server
    selector:
      app: elasticsearch
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      ingress.kubernetes.io/content-type-nosniff: "true"
      traefik.ingress.kubernetes.io/affinity: "true"
      traefik.ingress.kubernetes.io/rule-type: PathPrefixStrip
      traefik.ingress.kubernetes.io/session-cookie-name: traefikcookie
    creationTimestamp: "2019-02-17T19:14:17Z"
    name: garagetest-webui-service
    namespace: garagetest
    resourceVersion: "9200435"
    selfLink: /api/v1/namespaces/garagetest/services/garagetest-webui-service
    uid: 38747440-32e8-11e9-b70a-fa163e4ff25e
  spec:
    clusterIP: 10.254.127.160
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: garagetest-webui-app
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"kafka"},"name":"kafka","namespace":"garagetest"},"spec":{"ports":[{"name":"broker","port":9092,"protocol":"TCP","targetPort":"kafka"},{"name":"broker-ext","port":29092,"protocol":"TCP","targetPort":"kafka-ext"}],"selector":{"app":"kafka"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2019-02-28T17:25:21Z"
    labels:
      app: kafka
    name: kafka
    namespace: garagetest
    resourceVersion: "10996813"
    selfLink: /api/v1/namespaces/garagetest/services/kafka
    uid: d357257a-3b7d-11e9-984c-fa163ef36fb5
  spec:
    clusterIP: 10.254.184.132
    ports:
    - name: broker
      port: 9092
      protocol: TCP
      targetPort: kafka
    - name: broker-ext
      port: 29092
      protocol: TCP
      targetPort: kafka-ext
    selector:
      app: kafka
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"app":"kafka"},"name":"kafka-headless","namespace":"garagetest"},"spec":{"clusterIP":"None","ports":[{"name":"broker","port":9092,"protocol":"TCP","targetPort":9092},{"name":"broker-ext","port":29092,"protocol":"TCP","targetPort":29092}],"selector":{"app":"kafka"},"sessionAffinity":"None","type":"ClusterIP"}}
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    creationTimestamp: "2019-02-28T17:25:21Z"
    labels:
      app: kafka
    name: kafka-headless
    namespace: garagetest
    resourceVersion: "10996815"
    selfLink: /api/v1/namespaces/garagetest/services/kafka-headless
    uid: d390fd30-3b7d-11e9-984c-fa163ef36fb5
  spec:
    clusterIP: None
    ports:
    - name: broker
      port: 9092
      protocol: TCP
      targetPort: 9092
    - name: broker-ext
      port: 29092
      protocol: TCP
      targetPort: 29092
    selector:
      app: kafka
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"kibana"},"name":"kibana","namespace":"garagetest"},"spec":{"ports":[{"name":"client","port":5601,"protocol":"TCP","targetPort":"client"}],"selector":{"app":"kibana"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2019-03-01T20:18:01Z"
    labels:
      app: kibana
    name: kibana
    namespace: garagetest
    resourceVersion: "11262986"
    selfLink: /api/v1/namespaces/garagetest/services/kibana
    uid: 1ca9a3bd-3c5f-11e9-984c-fa163ef36fb5
  spec:
    clusterIP: 10.254.65.14
    ports:
    - name: client
      port: 5601
      protocol: TCP
      targetPort: client
    selector:
      app: kibana
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      ingress.kubernetes.io/content-type-nosniff: "true"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"ingress.kubernetes.io/content-type-nosniff":"true","traefik.ingress.kubernetes.io/affinity":"true","traefik.ingress.kubernetes.io/rule-type":"PathPrefixStrip","traefik.ingress.kubernetes.io/session-cookie-name":"traefikcookie"},"name":"kibana-external","namespace":"garagetest"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":5601}],"selector":{"app":"kibana"}}}
      traefik.ingress.kubernetes.io/affinity: "true"
      traefik.ingress.kubernetes.io/rule-type: PathPrefixStrip
      traefik.ingress.kubernetes.io/session-cookie-name: traefikcookie
    creationTimestamp: "2019-03-01T20:18:00Z"
    name: kibana-external
    namespace: garagetest
    resourceVersion: "11763661"
    selfLink: /api/v1/namespaces/garagetest/services/kibana-external
    uid: 1c64ab8c-3c5f-11e9-984c-fa163ef36fb5
  spec:
    clusterIP: 10.254.86.174
    ports:
    - port: 80
      protocol: TCP
      targetPort: 5601
    selector:
      app: kibana
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"kibana"},"name":"kibana-headless","namespace":"garagetest"},"spec":{"clusterIP":"None","ports":[{"name":"client","port":5601,"protocol":"TCP","targetPort":"client"}],"selector":{"app":"kibana"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2019-03-01T20:18:02Z"
    labels:
      app: kibana
    name: kibana-headless
    namespace: garagetest
    resourceVersion: "11262989"
    selfLink: /api/v1/namespaces/garagetest/services/kibana-headless
    uid: 1d37f1e5-3c5f-11e9-984c-fa163ef36fb5
  spec:
    clusterIP: None
    ports:
    - name: client
      port: 5601
      protocol: TCP
      targetPort: client
    selector:
      app: kibana
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"nifi"},"name":"nifi","namespace":"garagetest"},"spec":{"ports":[{"name":"broker","port":8080,"protocol":"TCP","targetPort":"nifi"},{"name":"rest-api","port":9090,"protocol":"TCP","targetPort":"nifi-rest-api"},{"name":"broker-ext","port":10000,"protocol":"TCP","targetPort":"nifi-ext"}],"selector":{"app":"nifi"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2019-02-28T17:37:41Z"
    labels:
      app: nifi
    name: nifi
    namespace: garagetest
    resourceVersion: "10999149"
    selfLink: /api/v1/namespaces/garagetest/services/nifi
    uid: 8c5d980d-3b7f-11e9-984c-fa163ef36fb5
  spec:
    clusterIP: 10.254.178.123
    ports:
    - name: broker
      port: 8080
      protocol: TCP
      targetPort: nifi
    - name: rest-api
      port: 9090
      protocol: TCP
      targetPort: nifi-rest-api
    - name: broker-ext
      port: 10000
      protocol: TCP
      targetPort: nifi-ext
    selector:
      app: nifi
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"nifi-external","namespace":"garagetest"},"spec":{"externalTrafficPolicy":"Local","ports":[{"name":"nifi-external-port","nodePort":30080,"port":30080,"protocol":"TCP","targetPort":8080},{"name":"nifi-rest-api-port","nodePort":30090,"port":30090,"protocol":"TCP","targetPort":9090}],"selector":{"app":"nifi"},"type":"NodePort"}}
    creationTimestamp: "2019-02-28T17:37:40Z"
    name: nifi-external
    namespace: garagetest
    resourceVersion: "10999146"
    selfLink: /api/v1/namespaces/garagetest/services/nifi-external
    uid: 8c283a2f-3b7f-11e9-984c-fa163ef36fb5
  spec:
    clusterIP: 10.254.148.83
    externalTrafficPolicy: Local
    ports:
    - name: nifi-external-port
      nodePort: 30080
      port: 30080
      protocol: TCP
      targetPort: 8080
    - name: nifi-rest-api-port
      nodePort: 30090
      port: 30090
      protocol: TCP
      targetPort: 9090
    selector:
      app: nifi
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"app":"nifi"},"name":"nifi-headless","namespace":"garagetest"},"spec":{"clusterIP":"None","ports":[{"name":"broker","port":8080,"protocol":"TCP","targetPort":8080},{"name":"rest-api","port":9090,"protocol":"TCP","targetPort":9090},{"name":"broker-ext","port":10000,"protocol":"TCP","targetPort":10000}],"selector":{"app":"nifi"},"sessionAffinity":"None","type":"ClusterIP"}}
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    creationTimestamp: "2019-02-28T17:37:41Z"
    labels:
      app: nifi
    name: nifi-headless
    namespace: garagetest
    resourceVersion: "10999151"
    selfLink: /api/v1/namespaces/garagetest/services/nifi-headless
    uid: 8c8c6671-3b7f-11e9-984c-fa163ef36fb5
  spec:
    clusterIP: None
    ports:
    - name: broker
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: rest-api
      port: 9090
      protocol: TCP
      targetPort: 9090
    - name: broker-ext
      port: 10000
      protocol: TCP
      targetPort: 10000
    selector:
      app: nifi
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"zookeeper"},"name":"zookeeper","namespace":"garagetest"},"spec":{"ports":[{"name":"client","port":2181,"protocol":"TCP","targetPort":"client"}],"selector":{"app":"zookeeper"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2019-02-28T17:21:49Z"
    labels:
      app: zookeeper
    name: zookeeper
    namespace: garagetest
    resourceVersion: "10996047"
    selfLink: /api/v1/namespaces/garagetest/services/zookeeper
    uid: 553a860d-3b7d-11e9-984c-fa163ef36fb5
  spec:
    clusterIP: 10.254.224.232
    ports:
    - name: client
      port: 2181
      protocol: TCP
      targetPort: client
    selector:
      app: zookeeper
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"zookeeper"},"name":"zookeeper-headless","namespace":"garagetest"},"spec":{"clusterIP":"None","ports":[{"name":"client","port":2181,"protocol":"TCP","targetPort":"client"},{"name":"election","port":3888,"protocol":"TCP","targetPort":"election"},{"name":"server","port":2888,"protocol":"TCP","targetPort":"server"}],"selector":{"app":"zookeeper"},"sessionAffinity":"None","type":"ClusterIP"}}
    creationTimestamp: "2019-02-28T17:21:50Z"
    labels:
      app: zookeeper
    name: zookeeper-headless
    namespace: garagetest
    resourceVersion: "10996049"
    selfLink: /api/v1/namespaces/garagetest/services/zookeeper-headless
    uid: 556142de-3b7d-11e9-984c-fa163ef36fb5
  spec:
    clusterIP: None
    ports:
    - name: client
      port: 2181
      protocol: TCP
      targetPort: client
    - name: election
      port: 3888
      protocol: TCP
      targetPort: election
    - name: server
      port: 2888
      protocol: TCP
      targetPort: server
    selector:
      app: zookeeper
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2019-02-17T19:14:17Z"
    generation: 1
    labels:
      app: garagetest-webui-app
    name: garagetest-webui-deployment
    namespace: garagetest
    resourceVersion: "11252590"
    selfLink: /apis/apps/v1/namespaces/garagetest/deployments/garagetest-webui-deployment
    uid: 385b87e6-32e8-11e9-b70a-fa163e4ff25e
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 5
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: garagetest-webui-app
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: garagetest-webui-app
      spec:
        containers:
        - image: reg-dhc-americas.app.corpintra.net/nggarage/springboot-oidc:1.5.19-v1
          imagePullPolicy: Always
          name: garagetest-webui-container
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 9999
          runAsUser: 1000
          supplementalGroups:
          - 9999
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    conditions:
    - lastTransitionTime: "2019-02-22T09:44:17Z"
      lastUpdateTime: "2019-02-22T09:44:17Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
    updatedReplicas: 5
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "5"
      deployment.kubernetes.io/max-replicas: "6"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2019-02-17T19:14:17Z"
    generation: 1
    labels:
      app: garagetest-webui-app
      pod-template-hash: "2200813821"
    name: garagetest-webui-deployment-6644d57d65
    namespace: garagetest
    ownerReferences:
    - apiVersion: extensions/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: garagetest-webui-deployment
      uid: 385b87e6-32e8-11e9-b70a-fa163e4ff25e
    resourceVersion: "11252589"
    selfLink: /apis/apps/v1/namespaces/garagetest/replicasets/garagetest-webui-deployment-6644d57d65
    uid: 385d87eb-32e8-11e9-b70a-fa163e4ff25e
  spec:
    replicas: 5
    selector:
      matchLabels:
        app: garagetest-webui-app
        pod-template-hash: "2200813821"
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: garagetest-webui-app
          pod-template-hash: "2200813821"
      spec:
        containers:
        - image: reg-dhc-americas.app.corpintra.net/nggarage/springboot-oidc:1.5.19-v1
          imagePullPolicy: Always
          name: garagetest-webui-container
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 9999
          runAsUser: 1000
          supplementalGroups:
          - 9999
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 5
    fullyLabeledReplicas: 5
    observedGeneration: 1
    readyReplicas: 5
    replicas: 5
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app":"elasticsearch"},"name":"elasticsearch","namespace":"garagetest"},"spec":{"podManagementPolicy":"OrderedReady","replicas":1,"selector":{"matchLabels":{"app":"elasticsearch"}},"serviceName":"elasticsearch-headless","template":{"metadata":{"labels":{"app":"elasticsearch"}},"spec":{"containers":[{"env":[{"name":"discovery.type","value":"single-node"}],"image":"reg-dhc-americas.app.corpintra.net/myanama/elasticsearch-oss:6.6.1","imagePullPolicy":"IfNotPresent","name":"elasticsearch","ports":[{"containerPort":9200,"name":"client","protocol":"TCP"},{"containerPort":9300,"name":"server","protocol":"TCP"}],"resources":{},"volumeMounts":[{"mountPath":"/var/lib/elasticsearch","name":"data"}]}],"dnsPolicy":"ClusterFirst","securityContext":{"fsGroup":1000,"runAsUser":1000},"terminationGracePeriodSeconds":1800}},"updateStrategy":{"type":"OnDelete"},"volumeClaimTemplates":[{"metadata":{"name":"data"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}}}]}}
    creationTimestamp: "2019-03-01T20:16:21Z"
    generation: 1
    labels:
      app: elasticsearch
    name: elasticsearch
    namespace: garagetest
    resourceVersion: "11262896"
    selfLink: /apis/apps/v1/namespaces/garagetest/statefulsets/elasticsearch
    uid: e112e31b-3c5e-11e9-984c-fa163ef36fb5
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: elasticsearch
    serviceName: elasticsearch-headless
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: elasticsearch
      spec:
        containers:
        - env:
          - name: discovery.type
            value: single-node
          image: reg-dhc-americas.app.corpintra.net/myanama/elasticsearch-oss:6.6.1
          imagePullPolicy: IfNotPresent
          name: elasticsearch
          ports:
          - containerPort: 9200
            name: client
            protocol: TCP
          - containerPort: 9300
            name: server
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/elasticsearch
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        terminationGracePeriodSeconds: 1800
    updateStrategy:
      type: OnDelete
    volumeClaimTemplates:
    - metadata:
        creationTimestamp: null
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status:
        phase: Pending
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: elasticsearch-65db4d4bff
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: elasticsearch-65db4d4bff
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app":"kafka"},"name":"kafka","namespace":"garagetest"},"spec":{"podManagementPolicy":"OrderedReady","replicas":3,"selector":{"matchLabels":{"app":"kafka"}},"serviceName":"kafka-headless","template":{"metadata":{"labels":{"app":"kafka"}},"spec":{"containers":[{"command":["sh","-exc","unset KAFKA_PORT \u0026\u0026 \\\nexport KAFKA_BROKER_ID=${POD_NAME##*-} \u0026\u0026 \\\nexport KAFKA_ZOOKEEPER_CONNECT=zookeeper-headless:2181 \u0026\u0026 \\\nexport KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_NAME}.kafka-headless:29092 \u0026\u0026 \\\nexec /etc/confluent/docker/run\n"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"KAFKA_HEAP_OPTS","value":"-Xmx1G -Xms1G"},{"name":"KAFKA_LOG_DIRS","value":"/opt/kafka/data/logs"},{"name":"KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE","value":"false"},{"name":"KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR","value":"3"},{"name":"KAFKA_JMX_PORT","value":"5555"}],"image":"reg-dhc-americas.app.corpintra.net/myanama/kafka:2.0.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["sh","-ec","/usr/bin/jps | /bin/grep -q SupportedKafka"]},"initialDelaySeconds":30,"timeoutSeconds":5},"name":"kafka-broker","ports":[{"containerPort":9092,"name":"kafka","protocol":"TCP"},{"containerPort":29092,"name":"kafka-ext","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"initialDelaySeconds":30,"periodSeconds":10,"successThreshold":1,"tcpSocket":{"port":"kafka-ext"},"timeoutSeconds":5},"resources":{},"volumeMounts":[{"mountPath":"/opt/kafka/data","name":"datadir"}]}],"dnsPolicy":"ClusterFirst","securityContext":{"fsGroup":1000,"runAsUser":1000},"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{},"name":"datadir"}]}},"updateStrategy":{"type":"OnDelete"}}}
    creationTimestamp: "2019-02-28T17:25:22Z"
    generation: 1
    labels:
      app: kafka
    name: kafka
    namespace: garagetest
    resourceVersion: "10997174"
    selfLink: /apis/apps/v1/namespaces/garagetest/statefulsets/kafka
    uid: d3b19d0b-3b7d-11e9-984c-fa163ef36fb5
  spec:
    podManagementPolicy: OrderedReady
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: kafka
    serviceName: kafka-headless
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kafka
      spec:
        containers:
        - command:
          - sh
          - -exc
          - |
            unset KAFKA_PORT && \
            export KAFKA_BROKER_ID=${POD_NAME##*-} && \
            export KAFKA_ZOOKEEPER_CONNECT=zookeeper-headless:2181 && \
            export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_NAME}.kafka-headless:29092 && \
            exec /etc/confluent/docker/run
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KAFKA_HEAP_OPTS
            value: -Xmx1G -Xms1G
          - name: KAFKA_LOG_DIRS
            value: /opt/kafka/data/logs
          - name: KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE
            value: "false"
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "3"
          - name: KAFKA_JMX_PORT
            value: "5555"
          image: reg-dhc-americas.app.corpintra.net/myanama/kafka:2.0.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - sh
              - -ec
              - /usr/bin/jps | /bin/grep -q SupportedKafka
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kafka-broker
          ports:
          - containerPort: 9092
            name: kafka
            protocol: TCP
          - containerPort: 29092
            name: kafka-ext
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: kafka-ext
            timeoutSeconds: 5
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/kafka/data
            name: datadir
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        terminationGracePeriodSeconds: 60
        volumes:
        - emptyDir: {}
          name: datadir
    updateStrategy:
      type: OnDelete
  status:
    collisionCount: 0
    currentReplicas: 3
    currentRevision: kafka-65497ff959
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updateRevision: kafka-65497ff959
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app":"kibana"},"name":"kibana","namespace":"garagetest"},"spec":{"podManagementPolicy":"OrderedReady","replicas":1,"selector":{"matchLabels":{"app":"kibana"}},"serviceName":"kibana-headless","template":{"metadata":{"labels":{"app":"kibana"}},"spec":{"containers":[{"env":[{"name":"elasticsearch.hosts","value":"http://elasticsearch-headless:9200"},{"name":"server.name","value":"ng-garage-nafta-qa.app.corpintra.net"}],"image":"reg-dhc-americas.app.corpintra.net/myanama/kibana-oss:6.6.1","imagePullPolicy":"IfNotPresent","name":"kibana","ports":[{"containerPort":5601,"name":"client","protocol":"TCP"}],"resources":{},"volumeMounts":[{"mountPath":"/var/lib/kibana","name":"data"}]}],"dnsPolicy":"ClusterFirst","securityContext":{"fsGroup":1000,"runAsUser":1000},"terminationGracePeriodSeconds":1800}},"updateStrategy":{"type":"OnDelete"},"volumeClaimTemplates":[{"metadata":{"name":"data"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}}}]}}
    creationTimestamp: "2019-03-01T20:18:02Z"
    generation: 1
    labels:
      app: kibana
    name: kibana
    namespace: garagetest
    resourceVersion: "11263122"
    selfLink: /apis/apps/v1/namespaces/garagetest/statefulsets/kibana
    uid: 1d754eff-3c5f-11e9-984c-fa163ef36fb5
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: kibana
    serviceName: kibana-headless
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: kibana
      spec:
        containers:
        - env:
          - name: elasticsearch.hosts
            value: http://elasticsearch-headless:9200
          - name: server.name
            value: ng-garage-nafta-qa.app.corpintra.net
          image: reg-dhc-americas.app.corpintra.net/myanama/kibana-oss:6.6.1
          imagePullPolicy: IfNotPresent
          name: kibana
          ports:
          - containerPort: 5601
            name: client
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kibana
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        terminationGracePeriodSeconds: 1800
    updateStrategy:
      type: OnDelete
    volumeClaimTemplates:
    - metadata:
        creationTimestamp: null
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status:
        phase: Pending
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: kibana-68858d95cf
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: kibana-68858d95cf
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app":"nifi"},"name":"nifi","namespace":"garagetest"},"spec":{"podManagementPolicy":"OrderedReady","replicas":1,"selector":{"matchLabels":{"app":"nifi"}},"serviceName":"nifi-headless","template":{"metadata":{"labels":{"app":"nifi"}},"spec":{"containers":[{"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"reg-dhc-americas.app.corpintra.net/myanama/nifi:1.8.0","imagePullPolicy":"IfNotPresent","name":"nifi-broker","ports":[{"containerPort":8080,"name":"nifi","protocol":"TCP"},{"containerPort":9090,"name":"nifi-rest-api","protocol":"TCP"},{"containerPort":10000,"name":"nifi-ext","protocol":"TCP"}],"resources":{},"volumeMounts":[{"mountPath":"/opt/data","name":"datadir"}]}],"dnsPolicy":"ClusterFirst","securityContext":{"fsGroup":1000,"runAsUser":1000},"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{},"name":"datadir"}]}},"updateStrategy":{"type":"OnDelete"}}}
    creationTimestamp: "2019-02-28T17:37:41Z"
    generation: 1
    labels:
      app: nifi
    name: nifi
    namespace: garagetest
    resourceVersion: "10999516"
    selfLink: /apis/apps/v1/namespaces/garagetest/statefulsets/nifi
    uid: 8cb2b71e-3b7f-11e9-984c-fa163ef36fb5
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: nifi
    serviceName: nifi-headless
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nifi
      spec:
        containers:
        - env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: reg-dhc-americas.app.corpintra.net/myanama/nifi:1.8.0
          imagePullPolicy: IfNotPresent
          name: nifi-broker
          ports:
          - containerPort: 8080
            name: nifi
            protocol: TCP
          - containerPort: 9090
            name: nifi-rest-api
            protocol: TCP
          - containerPort: 10000
            name: nifi-ext
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/data
            name: datadir
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        terminationGracePeriodSeconds: 60
        volumes:
        - emptyDir: {}
          name: datadir
    updateStrategy:
      type: OnDelete
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: nifi-7dc7c48b79
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: nifi-7dc7c48b79
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{},"labels":{"app":"zookeeper"},"name":"zookeeper","namespace":"garagetest"},"spec":{"podManagementPolicy":"OrderedReady","replicas":3,"selector":{"matchLabels":{"app":"zookeeper"}},"serviceName":"zookeeper-headless","template":{"metadata":{"labels":{"app":"zookeeper"}},"spec":{"containers":[{"command":["/bin/bash","-xec","zkGenConfig.sh \u0026\u0026 exec zkServer.sh start-foreground"],"env":[{"name":"ZK_REPLICAS","value":"3"},{"name":"JMXAUTH","value":"false"},{"name":"JMXDISABLE","value":"false"},{"name":"JMXPORT","value":"1099"},{"name":"JMXSSL","value":"false"},{"name":"ZK_CLIENT_PORT","value":"2181"},{"name":"ZK_ELECTION_PORT","value":"3888"},{"name":"ZK_HEAP_SIZE","value":"2G"},{"name":"ZK_INIT_LIMIT","value":"5"},{"name":"ZK_LOG_LEVEL","value":"INFO"},{"name":"ZK_MAX_CLIENT_CNXNS","value":"60"},{"name":"ZK_MAX_SESSION_TIMEOUT","value":"40000"},{"name":"ZK_MIN_SESSION_TIMEOUT","value":"4000"},{"name":"ZK_PURGE_INTERVAL","value":"0"},{"name":"ZK_SERVER_PORT","value":"2888"},{"name":"ZK_SNAP_RETAIN_COUNT","value":"3"},{"name":"ZK_SYNC_LIMIT","value":"10"},{"name":"ZK_TICK_TIME","value":"2000"}],"image":"reg-dhc-americas.app.corpintra.net/myanama/zookeeper:3.4.10","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["zkOk.sh"]},"initialDelaySeconds":20},"name":"zookeeper","ports":[{"containerPort":2181,"name":"client","protocol":"TCP"},{"containerPort":3888,"name":"election","protocol":"TCP"},{"containerPort":2888,"name":"server","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["zkOk.sh"]},"initialDelaySeconds":20},"resources":{},"volumeMounts":[{"mountPath":"/var/lib/zookeeper","name":"data"}]}],"dnsPolicy":"ClusterFirst","securityContext":{"fsGroup":1000,"runAsUser":1000},"terminationGracePeriodSeconds":1800}},"updateStrategy":{"type":"OnDelete"},"volumeClaimTemplates":[{"metadata":{"name":"data"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}}}]}}
    creationTimestamp: "2019-02-28T17:21:50Z"
    generation: 1
    labels:
      app: zookeeper
    name: zookeeper
    namespace: garagetest
    resourceVersion: "10996716"
    selfLink: /apis/apps/v1/namespaces/garagetest/statefulsets/zookeeper
    uid: 5586c208-3b7d-11e9-984c-fa163ef36fb5
  spec:
    podManagementPolicy: OrderedReady
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: zookeeper
    serviceName: zookeeper-headless
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: zookeeper
      spec:
        containers:
        - command:
          - /bin/bash
          - -xec
          - zkGenConfig.sh && exec zkServer.sh start-foreground
          env:
          - name: ZK_REPLICAS
            value: "3"
          - name: JMXAUTH
            value: "false"
          - name: JMXDISABLE
            value: "false"
          - name: JMXPORT
            value: "1099"
          - name: JMXSSL
            value: "false"
          - name: ZK_CLIENT_PORT
            value: "2181"
          - name: ZK_ELECTION_PORT
            value: "3888"
          - name: ZK_HEAP_SIZE
            value: 2G
          - name: ZK_INIT_LIMIT
            value: "5"
          - name: ZK_LOG_LEVEL
            value: INFO
          - name: ZK_MAX_CLIENT_CNXNS
            value: "60"
          - name: ZK_MAX_SESSION_TIMEOUT
            value: "40000"
          - name: ZK_MIN_SESSION_TIMEOUT
            value: "4000"
          - name: ZK_PURGE_INTERVAL
            value: "0"
          - name: ZK_SERVER_PORT
            value: "2888"
          - name: ZK_SNAP_RETAIN_COUNT
            value: "3"
          - name: ZK_SYNC_LIMIT
            value: "10"
          - name: ZK_TICK_TIME
            value: "2000"
          image: reg-dhc-americas.app.corpintra.net/myanama/zookeeper:3.4.10
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - zkOk.sh
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: zookeeper
          ports:
          - containerPort: 2181
            name: client
            protocol: TCP
          - containerPort: 3888
            name: election
            protocol: TCP
          - containerPort: 2888
            name: server
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - zkOk.sh
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/zookeeper
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        terminationGracePeriodSeconds: 1800
    updateStrategy:
      type: OnDelete
    volumeClaimTemplates:
    - metadata:
        creationTimestamp: null
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status:
        phase: Pending
  status:
    collisionCount: 0
    currentReplicas: 3
    currentRevision: zookeeper-7f494db49b
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updateRevision: zookeeper-7f494db49b
    updatedReplicas: 3
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
