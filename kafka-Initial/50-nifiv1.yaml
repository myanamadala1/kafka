apiVersion: v1
kind: List
items:
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: nifi-network-policy
  spec:
    podSelector:
      matchLabels:
        app: nifi
    ingress:
    - {}
- apiVersion: v1
  kind: Service
  metadata:
    name: nifi-external
  spec:
    externalTrafficPolicy: Local
    ports:
    - nodePort: 30080
      port: 30080
      protocol: TCP
      targetPort: 8080
      name: nifi-external-port
    - nodePort: 30090
      port: 30090
      protocol: TCP
      targetPort: 9090
      name: nifi-rest-api-port
    selector:
      app: nifi
    type: NodePort
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: nifi
    name: nifi
  spec:
    ports:
    - name: broker
      port: 8080
      protocol: TCP
      targetPort: nifi
    - name: rest-api
      port: 9090
      protocol: TCP
      targetPort: nifi-rest-api
    - name: broker-ext
      port: 10000
      protocol: TCP
      targetPort: nifi-ext
    selector:
      app: nifi
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    labels:
      app: nifi
    name: nifi-headless
  spec:
    clusterIP: None
    ports:
    - name: broker
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: rest-api
      port: 9090
      protocol: TCP
      targetPort: 9090
    - name: broker-ext
      port: 10000
      protocol: TCP
      targetPort: 10000
    selector:
      app: nifi
    sessionAffinity: None
    type: ClusterIP
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    labels:
      app: nifi
    name: nifi
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    selector:
      matchLabels:
        app: nifi
    serviceName: nifi-headless
    template:
      metadata:
        labels:
          app: nifi
      spec:
        containers:
        - name: nifi-broker
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: NIFI_WEB_HTTP_HOST
            value: "ng-garage-nafta-qa.app.corpintra.net"
          - name: NIFI_WEB_HTTP_PORT
            value: "8080"
          - name: NIFI_WEB_HTTP_PORT_FORWARDING
            value: "80"
          image: reg-dhc-americas.app.corpintra.net/myanama/nifi:1.8.0
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8080
            name: nifi
            protocol: TCP
          - containerPort: 9090
            name: nifi-rest-api
            protocol: TCP
          - containerPort: 10000
            name: nifi-ext
            protocol: TCP
          resources: {}
          volumeMounts:
          - mountPath: /opt/data
            name: datadir
        dnsPolicy: ClusterFirst
        securityContext:
          fsGroup: 1000
          runAsUser: 1000
        terminationGracePeriodSeconds: 60
        volumes:
        - emptyDir: {}
          name: datadir
    updateStrategy:
      type: OnDelete
- apiVersion: v1
  kind: Service
  metadata:
    name: nifi-external
    annotations:
      ingress.kubernetes.io/content-type-nosniff: "true"
      traefik.ingress.kubernetes.io/affinity: "true"
      traefik.ingress.kubernetes.io/rule-type: PathPrefix
      traefik.ingress.kubernetes.io/session-cookie-name: traefikcookie
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      app: nifi
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    name: nifi-ingress
    annotations:
      traefik.frontend.rule.type: PathPrefix
      ingress.kubernetes.io/content-type-nosniff: "true"
      nginx.ingress.kubernetes.io/affinity: cookie
  spec:
    rules:
    - http:
        paths:
        - path: /app/nifi
          backend:
            serviceName: nifi-external
            servicePort: 80
        - path: /nifi
          backend:
            serviceName: nifi-external
            servicePort: 80
        - path: /app/nifi-api
          backend:
            serviceName: nifi-external
            servicePort: 80
        - path: /nifi-api
          backend:
            serviceName: nifi-external
            servicePort: 80
        - path: /app/nifi/nifi-api
          backend:
            serviceName: nifi-external
            servicePort: 80
         
