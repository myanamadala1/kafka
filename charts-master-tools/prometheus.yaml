apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1beta2","kind":"Deployment","metadata":{"annotations":{},"name":"prometheus","namespace":"kube-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"prometheus"}},"template":{"metadata":{"labels":{"app":"prometheus"},"name":"prometheus"},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"dhc-type","operator":"In","values":["master"]}]},"weight":1}]}},"containers":[{"args":["-webhook-url=http://prometheus:9090/prometheus/-/reload","-volume-dir=/etc/prometheus"],"image":"reg-dhc.app.corpintra.net/caas/configmap-reload:v0.2.2","name":"configmap-reload","resources":{"limits":{"memory":"10Mi"},"requests":{"cpu":"2m","memory":"10Mi"}},"securityContext":{"runAsUser":2000},"volumeMounts":[{"mountPath":"/etc/prometheus","name":"prometheus-config"}]},{"args":["--config.file=/etc/blackbox/blackbox.yaml"],"image":"reg-dhc.app.corpintra.net/caas/blackbox-exporter:v0.12.0","name":"blackbox","ports":[{"containerPort":9115,"name":"blackbox"}],"resources":{"limits":{"memory":"150Mi"},"requests":{"cpu":"5m","memory":"5Mi"}},"securityContext":{"runAsUser":2000},"volumeMounts":[{"mountPath":"/etc/blackbox","name":"blackbox-config"}]},{"args":["--config.file=/etc/prometheus/prometheus.yaml","--storage.tsdb.retention=55m","--storage.tsdb.path=/tmp","--storage.tsdb.min-block-duration=30m","--storage.tsdb.max-block-duration=30m","--storage.tsdb.no-wal","--log.level=error","--web.listen-address=0.0.0.0:9090","--web.route-prefix=prometheus","--web.external-url=http://prometheus:9090/prometheus","--web.enable-lifecycle"],"image":"reg-dhc.app.corpintra.net/caas/prometheus:v2.7.1-disable-wal-tsdb","livenessProbe":{"httpGet":{"path":"/prometheus/-/healthy","port":9090},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"prometheus","ports":[{"containerPort":9090,"name":"web"}],"readinessProbe":{"httpGet":{"path":"/prometheus/-/ready","port":9090},"initialDelaySeconds":30,"timeoutSeconds":30},"resources":{"limits":{"memory":"3500Mi"},"requests":{"cpu":"250m","memory":"2000Mi"}},"securityContext":{"runAsUser":2000},"volumeMounts":[{"mountPath":"/etc/prometheus","name":"prometheus-config"}]}],"priorityClassName":"system-cluster-critical","serviceAccountName":"dhc-prometheus","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Exists"}],"volumes":[{"configMap":{"name":"prometheus"},"name":"prometheus-config"},{"configMap":{"name":"blackbox"},"name":"blackbox-config"}]}}}}
  creationTimestamp: "2018-11-24T12:49:22Z"
  generation: 2
  labels:
    app: prometheus
  name: prometheus
  namespace: kube-system
  resourceVersion: "9715823"
  selfLink: /apis/extensions/v1beta1/namespaces/kube-system/deployments/prometheus
  uid: 5de85deb-efe7-11e8-a695-fa163e4ff25e
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: prometheus
      name: prometheus
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: dhc-type
                operator: In
                values:
                - master
            weight: 1
      containers:
      - args:
        - -webhook-url=http://prometheus:9090/prometheus/-/reload
        - -volume-dir=/etc/prometheus
        image: reg-dhc.app.corpintra.net/caas/configmap-reload:v0.2.2
        imagePullPolicy: IfNotPresent
        name: configmap-reload
        resources:
          limits:
            memory: 10Mi
          requests:
            cpu: 2m
            memory: 10Mi
        securityContext:
          runAsUser: 2000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus
          name: prometheus-config
      - args:
        - --config.file=/etc/blackbox/blackbox.yaml
        image: reg-dhc.app.corpintra.net/caas/blackbox-exporter:v0.12.0
        imagePullPolicy: IfNotPresent
        name: blackbox
        ports:
        - containerPort: 9115
          name: blackbox
          protocol: TCP
        resources:
          limits:
            memory: 150Mi
          requests:
            cpu: 5m
            memory: 5Mi
        securityContext:
          runAsUser: 2000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/blackbox
          name: blackbox-config
      - args:
        - --config.file=/etc/prometheus/prometheus.yaml
        - --storage.tsdb.retention=55m
        - --storage.tsdb.path=/tmp
        - --storage.tsdb.min-block-duration=30m
        - --storage.tsdb.max-block-duration=30m
        - --storage.tsdb.no-wal
        - --log.level=error
        - --web.listen-address=0.0.0.0:9090
        - --web.route-prefix=prometheus
        - --web.external-url=http://prometheus:9090/prometheus
        - --web.enable-lifecycle
        image: reg-dhc.app.corpintra.net/caas/prometheus:v2.7.1-disable-wal-tsdb
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /prometheus/-/healthy
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        name: prometheus
        ports:
        - containerPort: 9090
          name: web
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /prometheus/-/ready
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        resources:
          limits:
            memory: 3500Mi
          requests:
            cpu: 250m
            memory: 2000Mi
        securityContext:
          runAsUser: 2000
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/prometheus
          name: prometheus-config
      dnsPolicy: ClusterFirst
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: dhc-prometheus
      serviceAccountName: dhc-prometheus
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
      volumes:
      - configMap:
          defaultMode: 420
          name: prometheus
        name: prometheus-config
      - configMap:
          defaultMode: 420
          name: blackbox
        name: blackbox-config
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2018-11-24T12:49:22Z"
    lastUpdateTime: "2019-02-22T09:57:07Z"
    message: ReplicaSet "prometheus-786459f6d7" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2019-02-22T12:10:43Z"
    lastUpdateTime: "2019-02-22T12:10:43Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
